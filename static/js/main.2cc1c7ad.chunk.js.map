{"version":3,"sources":["components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","services/phone-book-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","changeFilter","createAction","fetchContacts","a","axios","get","data","addContact","contact","post","deleteContact","id","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","Api","contacts","postContact","postedContact","items","createReducer","fulfilled","payload","state","filter","isLoading","pending","rejected","error","combineReducers","midlewareCFG","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","middleware","getDefaultMiddleware","store","configureStore","reducer","contactsReducer","devTools","process","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","className","s","form","onSubmit","event","preventDefault","alert","title","input","type","value","onChange","target","trimLeft","button","getFilter","getLoading","getVisibleContacts","createSelector","toLowerCase","includes","Contacts","useSelector","useEffect","list","map","listItem","num","onClick","Filter","trim","App","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.2cc1c7ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1GdLu\",\"listItem\":\"ContactList_listItem__3CBwK\",\"name\":\"ContactList_name__1EQ6d\",\"num\":\"ContactList_num__3nm1n\",\"button\":\"ContactList_button__Mv4-m\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:1313';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n}\n\nexport async function addContact(contact) {\n  const { data } = await axios.post('/contacts', contact);\n  return data;\n}\n\nexport async function deleteContact(id) {\n  await axios.delete(`/contacts/${id}`);\n}\n","import * as Api from '../../services/phone-book-api';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await Api.fetchContacts();\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const postContact = createAsyncThunk(\n  'contacts/postContact',\n  async (data, { rejectWithValue }) => {\n    try {\n      const postedContact = await Api.addContact(data);\n      return postedContact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/addContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      await Api.deleteContact(id);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './contacts-actions';\nimport {\n  fetchContacts,\n  postContact,\n  deleteContact,\n} from './contacts-operations';\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [postContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [postContact.pending]: () => true,\n  [postContact.fulfilled]: () => false,\n  [postContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, { payload }) => payload,\n  [fetchContacts.pending]: () => null,\n  [postContact.rejected]: (_, { payload }) => payload,\n  [postContact.pending]: () => null,\n  [deleteContact.rejected]: (_, { payload }) => payload,\n  [deleteContact.pending]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n","import contactsReducer from './contacts/contacts-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst midlewareCFG = {\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  },\n};\n\nlet middleware = getDefaultMiddleware(midlewareCFG);\nif (process.env.NODE_ENV === 'development') {\n  middleware = [...getDefaultMiddleware(midlewareCFG), logger];\n}\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n","import { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport { postContact } from '../../redux/contacts/contacts-operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleNameChange = ({ target }) => {\n    setName(target.value.trimLeft());\n  };\n  const handleNumberChange = ({ target }) => {\n    setNumber(target.value.trimLeft());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (name === '') {\n      alert('Name required');\n      return;\n    }\n    if (number === '') {\n      alert('Number required');\n      return;\n    }\n    dispatch(postContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.title}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={name}\n          onChange={handleNameChange}\n        />\n      </label>\n      <label className={s.title}>\n        Number\n        <input\n          className={s.input}\n          type=\"text\"\n          value={number}\n          onChange={handleNumberChange}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getLoading = state => state.contacts.isLoading;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n","import s from './ContactList.module.css';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  deleteContact,\n  fetchContacts,\n} from '../../redux/contacts/contacts-operations';\nimport {\n  getVisibleContacts,\n  getLoading,\n} from '../../redux/contacts/contacts-selectors';\n\nexport default function Contacts() {\n  const isLoading = useSelector(getLoading);\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {isLoading ? <h2>Updating...</h2> : <h2>Contacts list:</h2>}\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => {\n          return (\n            <li key={id} className={s.listItem}>\n              <span className={s.name}>{name}:</span>\n              <span className={s.num}>{number}</span>\n              <button\n                className={s.button}\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    dispatch(changeFilter(target.value.trim()));\n  };\n\n  return <input type=\"text\" value={filter} onChange={handleChange} />;\n}\n","import ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nexport default function App() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1_QBB\",\"title\":\"ContactForm_title__1_JAP\",\"input\":\"ContactForm_input__4_Sh0\",\"button\":\"ContactForm_button__1bKRm\"};"],"sourceRoot":""}